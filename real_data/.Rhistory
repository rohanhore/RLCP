theme(axis.title = element_text(size = 15),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=15))+
neck1mlm
plot_result=matrix(0,ncol=5,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,mean)))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
plot_result[id,5]=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,sd)))[,1]/sqrt(nrep)
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base_method","h","se")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$se=as.numeric(plot_result$se)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot1=ggplot(plot_result, aes(x=h, y = coverage, color=CP_method)) +
geom_line() +
geom_point()+
ylim(0.885,0.915)+
# geom_errorbar(aes(ymin=coverage-se, ymax=coverage+se), width=.02,
#               position=position_dodge(0.001))+
geom_hline(yintercept=0.9,linetype="dashed")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
scale_x_continuous(n.breaks=3)+
theme(legend.position = "none")+
labs(color="Method",x="Bandwidth h",y="Coverage")+
theme(axis.title = element_text(size = 15),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=15))
plot_result=matrix(0,ncol=4,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(real_result[[i]][[2]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("width","CP_method","base_method","h")
plot_result$width=as.numeric(plot_result$width)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot2=ggplot(plot_result, aes(x=h, y = width, color=CP_method)) +
geom_line() +
geom_point()+
ylim(7.2,8.5)+
scale_x_continuous(n.breaks=3)+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
labs(color="Method",x="Bandwidth h",y="Prediction interval width")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=12),
plot.title = element_text(hjust = 0.5,size=14),
legend.position = "bottom",
legend.text = element_text(size=14),
strip.text = element_text(size=14))
grid.arrange(plot1,plot2,ncol=2,widths=c(2.6,3))
plot2=ggplot(plot_result, aes(x=h, y = width, color=CP_method)) +
geom_line() +
geom_point()+
ylim(7.2,8.5)+
scale_x_continuous(n.breaks=3)+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
labs(color="Method",x="Bandwidth h",y="Prediction interval width")+
theme(axis.title = element_text(size = 15),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=15))
grid.arrange(plot1,plot2,ncol=2,widths=c(2.6,3))
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 3)
grid.arrange(plot1,plot2,ncol=2,widths=c(2.6,3))
dev.off()
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 6)
grid.arrange(plot1,plot2,ncol=2,widths=c(3,3))
dev.off()
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 4.5)
grid.arrange(plot1,plot2,ncol=2,widths=c(3.2,3))
dev.off()
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 4.5)
grid.arrange(plot1,plot2,ncol=2,widths=c(3.3,3.3))
dev.off()
#----------------marginal coverage------------------
plot_result=matrix(0,ncol=5,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,mean)))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
plot_result[id,5]=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,sd)))[,1]/sqrt(nrep)
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base_method","h","se")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$se=as.numeric(plot_result$se)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot1=ggplot(plot_result, aes(x=h, y = coverage, color=CP_method)) +
geom_line() +
geom_point()+
ylim(0.885,0.915)+
# geom_errorbar(aes(ymin=coverage-se, ymax=coverage+se), width=.02,
#               position=position_dodge(0.001))+
geom_hline(yintercept=0.9,linetype="dashed")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
scale_x_continuous(n.breaks=3)+
theme(legend.position = "none")+
labs(color="Method",x="Bandwidth h",y="Coverage")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=15))
#--------------------PI widths------------------------------
write.csv(round(t(width),2),"../results/real_data_width.csv")
plot_result=matrix(0,ncol=4,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(real_result[[i]][[2]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("width","CP_method","base_method","h")
plot_result$width=as.numeric(plot_result$width)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot2=ggplot(plot_result, aes(x=h, y = width, color=CP_method)) +
geom_line() +
geom_point()+
ylim(7.2,8.5)+
scale_x_continuous(n.breaks=3)+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
labs(color="Method",x="Bandwidth h",y="Prediction interval width")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=15))
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 4.5)
grid.arrange(plot1,plot2,ncol=2,widths=c(3.3,3.3))
dev.off()
#----------------marginal coverage------------------
plot_result=matrix(0,ncol=5,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,mean)))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
plot_result[id,5]=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,sd)))[,1]/sqrt(nrep)
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base_method","h","se")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$se=as.numeric(plot_result$se)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot1=ggplot(plot_result, aes(x=h, y = coverage, color=CP_method)) +
geom_line() +
geom_point()+
ylim(0.885,0.915)+
# geom_errorbar(aes(ymin=coverage-se, ymax=coverage+se), width=.02,
#               position=position_dodge(0.001))+
geom_hline(yintercept=0.9,linetype="dashed")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
scale_x_continuous(n.breaks=3)+
theme(legend.position = "none")+
labs(color="Method",x="Bandwidth h",y="Coverage")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=14))
#--------------------PI widths------------------------------
write.csv(round(t(width),2),"../results/real_data_width.csv")
plot_result=matrix(0,ncol=4,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(real_result[[i]][[2]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("width","CP_method","base_method","h")
plot_result$width=as.numeric(plot_result$width)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot2=ggplot(plot_result, aes(x=h, y = width, color=CP_method)) +
geom_line() +
geom_point()+
ylim(7.2,8.5)+
scale_x_continuous(n.breaks=3)+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
labs(color="Method",x="Bandwidth h",y="Prediction interval width")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=14))
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 4.5)
grid.arrange(plot1,plot2,ncol=2,widths=c(3.3,3.3))
dev.off()
#----------------marginal coverage------------------
plot_result=matrix(0,ncol=5,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,mean)))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
plot_result[id,5]=stack(as.data.frame(apply(real_result[[i]][[1]]*nrep,2,sd)))[,1]/sqrt(nrep)
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base_method","h","se")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$se=as.numeric(plot_result$se)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot1=ggplot(plot_result, aes(x=h, y = coverage, color=CP_method)) +
geom_line() +
geom_point()+
ylim(0.885,0.915)+
# geom_errorbar(aes(ymin=coverage-se, ymax=coverage+se), width=.02,
#               position=position_dodge(0.001))+
geom_hline(yintercept=0.9,linetype="dashed")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
scale_x_continuous(n.breaks=3)+
theme(legend.position = "none")+
labs(color="Method",x="Bandwidth h",y="Coverage")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=13))
#--------------------PI widths------------------------------
write.csv(round(t(width),2),"../results/real_data_width.csv")
plot_result=matrix(0,ncol=4,nrow=9*length(hseq))
for(i in 1:length(hseq)){
id=(9*(i-1)+1):(9*i)
res=stack(as.data.frame(real_result[[i]][[2]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(c("RLCP","calLCP","baseLCP"),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3)
plot_result[id,4]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("width","CP_method","base_method","h")
plot_result$width=as.numeric(plot_result$width)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot2=ggplot(plot_result, aes(x=h, y = width, color=CP_method)) +
geom_line() +
geom_point()+
ylim(7.2,8.5)+
scale_x_continuous(n.breaks=3)+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(.~base_method)+
labs(color="Method",x="Bandwidth h",y="Prediction interval width")+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=13))
pdf(file = "../results/figures/realdata_marginal_results.pdf",width = 10, height = 4.5)
grid.arrange(plot1,plot2,ncol=2,widths=c(3.3,3.3))
dev.off()
#---------------across smoking groups------------------
plot_result=matrix(0,ncol=5,nrow=3*9*length(hseq))
for(i in 1:length(hseq)){
id=(3*9*(i-1)+1):(3*9*i)
res=stack(as.data.frame(real_result[[i]][[3]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=3),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3*3)
plot_result[id,4]=rep(c("F","M","I"),9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","sex","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot3=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = sex, y = coverage,group=CP_method,
fill=CP_method)) +
geom_col(position='dodge',width=0.5) +
coord_cartesian(ylim=c(0.88,0.93))+
xlab("LCP method")+
scale_fill_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
geom_hline(yintercept=0.9,linetype="dashed")+
facet_grid(h~`base method`,labeller = label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=13))+
labs(fill="Method",x="Sex",y="Coverage")
#-------------across diameter bins-------------------------
quantiles=seq(0.125,0.875,by=0.01);len_q=length(quantiles)
plot_result=matrix(0,ncol=5,nrow=len_q*9*length(hseq))
for(i in 1:length(hseq)){
id=(len_q*9*(i-1)+1):(len_q*9*i)
res=stack(as.data.frame(real_result[[i]][[4]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=len_q),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=len_q*3)
plot_result[id,4]=rep(quantiles,9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","diam","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$diam=as.numeric(plot_result$diam)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot4=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = diam, y = coverage,color=CP_method)) +
geom_line() +
geom_hline(yintercept=0.9,linetype="dashed")+
xlab("Diameter quantile")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(h~ `base method` ,labeller=label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=13))+
labs(color="Method",x="Diameter Quantile",y="Local Coverage")
#-------------across length bins-------------------------
quantiles=seq(0.125,0.875,by=0.01);len_q=length(quantiles)
plot_result=matrix(0,ncol=5,nrow=len_q*9*length(hseq))
for(i in 1:length(hseq)){
id=(len_q*9*(i-1)+1):(len_q*9*i)
res=stack(as.data.frame(real_result[[i]][[5]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=len_q),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=len_q*3)
plot_result[id,4]=rep(quantiles,9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","length","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$length=as.numeric(plot_result$length)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot5=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = length, y = coverage,color=CP_method)) +
geom_line() +
geom_hline(yintercept=0.9,linetype="dashed")+
xlab("Length quantile")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(h~ `base method` ,labeller=label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 14),
axis.text=element_text(size=13),
plot.title = element_text(hjust = 0.5,size=15),
legend.position = "bottom",
legend.text = element_text(size=15),
strip.text = element_text(size=13))+
labs(color="Method",x="Length Quantile",y="Local Coverage")
pdf(file = "../results/figures/realdata_conditional_results.pdf",width = 10, height = 5)
grid.arrange(plot3,plot5,ncol=2,widths=c(3,3))
dev.off()
pdf(file = "../results/figures/realdata_conditional_results.pdf",width = 14, height = 5)
grid.arrange(plot3,plot5,ncol=2,widths=c(3,3))
dev.off()
plot5=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = length, y = coverage,color=CP_method)) +
geom_line() +
geom_hline(yintercept=0.9,linetype="dashed")+
xlab("Length quantile")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(h~ `base method` ,labeller=label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 16),
axis.text=element_text(size=15),
plot.title = element_text(hjust = 0.5,size=17),
legend.position = "bottom",
legend.text = element_text(size=17),
strip.text = element_text(size=15))+
labs(color="Method",x="Length Quantile",y="Local Coverage")
pdf(file = "../results/figures/realdata_conditional_results.pdf",width = 14, height = 5)
grid.arrange(plot3,plot5,ncol=2,widths=c(3,3))
dev.off()
#---------------across smoking groups------------------
plot_result=matrix(0,ncol=5,nrow=3*9*length(hseq))
for(i in 1:length(hseq)){
id=(3*9*(i-1)+1):(3*9*i)
res=stack(as.data.frame(real_result[[i]][[3]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=3),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=3*3)
plot_result[id,4]=rep(c("F","M","I"),9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","sex","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot3=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = sex, y = coverage,group=CP_method,
fill=CP_method)) +
geom_col(position='dodge',width=0.5) +
coord_cartesian(ylim=c(0.88,0.93))+
xlab("LCP method")+
scale_fill_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
geom_hline(yintercept=0.9,linetype="dashed")+
facet_grid(h~`base method`,labeller = label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 16),
axis.text=element_text(size=15),
plot.title = element_text(hjust = 0.5,size=17),
legend.position = "bottom",
legend.text = element_text(size=17),
strip.text = element_text(size=15))+
labs(fill="Method",x="Sex",y="Coverage")
#-------------across diameter bins-------------------------
quantiles=seq(0.125,0.875,by=0.01);len_q=length(quantiles)
plot_result=matrix(0,ncol=5,nrow=len_q*9*length(hseq))
for(i in 1:length(hseq)){
id=(len_q*9*(i-1)+1):(len_q*9*i)
res=stack(as.data.frame(real_result[[i]][[4]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=len_q),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=len_q*3)
plot_result[id,4]=rep(quantiles,9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","diam","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$diam=as.numeric(plot_result$diam)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot4=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = diam, y = coverage,color=CP_method)) +
geom_line() +
geom_hline(yintercept=0.9,linetype="dashed")+
xlab("Diameter quantile")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(h~ `base method` ,labeller=label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 16),
axis.text=element_text(size=15),
plot.title = element_text(hjust = 0.5,size=17),
legend.position = "bottom",
legend.text = element_text(size=17),
strip.text = element_text(size=15))+
labs(color="Method",x="Diameter Quantile",y="Local Coverage")
#-------------across length bins-------------------------
quantiles=seq(0.125,0.875,by=0.01);len_q=length(quantiles)
plot_result=matrix(0,ncol=5,nrow=len_q*9*length(hseq))
for(i in 1:length(hseq)){
id=(len_q*9*(i-1)+1):(len_q*9*i)
res=stack(as.data.frame(real_result[[i]][[5]]))
plot_result[id,1]=res[,1]
plot_result[id,2]=rep(rep(c("RLCP","calLCP","baseLCP"),each=len_q),3)
plot_result[id,3]=rep(c("Linear Model","Random Forest","Neural Net"),each=len_q*3)
plot_result[id,4]=rep(quantiles,9)
plot_result[id,5]=hseq[i]
}
plot_result=as.data.frame(plot_result)
colnames(plot_result)=c("coverage","CP_method","base method","length","h")
plot_result$coverage=as.numeric(plot_result$coverage)
plot_result$length=as.numeric(plot_result$length)
plot_result$h=as.numeric(plot_result$h)
plot_result$CP_method=factor(plot_result$CP_method,level=c('baseLCP','calLCP','RLCP'))
plot5=ggplot(plot_result[plot_result$h %in% c(0.05,0.25),], aes(x = length, y = coverage,color=CP_method)) +
geom_line() +
geom_hline(yintercept=0.9,linetype="dashed")+
xlab("Length quantile")+
scale_color_manual(values=c("RLCP"="maroon","calLCP"="gold3","baseLCP"="blue"))+
facet_grid(h~ `base method` ,labeller=label_bquote(cols = .(`base method`),rows= h ==.(h)))+
theme(axis.title = element_text(size = 16),
axis.text=element_text(size=15),
plot.title = element_text(hjust = 0.5,size=17),
legend.position = "bottom",
legend.text = element_text(size=17),
strip.text = element_text(size=15))+
labs(color="Method",x="Length Quantile",y="Local Coverage")
pdf(file = "../results/figures/realdata_conditional_results.pdf",width = 14, height = 5)
grid.arrange(plot3,plot5,ncol=2,widths=c(3,3))
dev.off()
